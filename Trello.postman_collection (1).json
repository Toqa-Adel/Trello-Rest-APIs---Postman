{
	"info": {
		"_postman_id": "93b05286-6c1c-4cc7-bd08-5978538a7aba",
		"name": "Trello",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25064102"
	},
	"item": [
		{
			"name": "Create a new Organization",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Check Organization ID\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"id\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check Organization Name\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"displayName\");\r",
							"});\r",
							"\r",
							"pm.test(\"Organization Name\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.displayName).to.eql(\"API ORG\");\r",
							"});\r",
							"\r",
							"\r",
							"    pm.environment.set(\"OrgID\", pm.response.json().id);\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "",
							"type": "string"
						},
						{
							"key": "key",
							"value": "",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\":\"api test\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BaseURL}}/1/organizations?displayName=API ORG&key={{key}}&token={{token}}&desc=This Is for Trello APIs Tests Project WS",
					"host": [
						"{{BaseURL}}"
					],
					"path": [
						"1",
						"organizations"
					],
					"query": [
						{
							"key": "displayName",
							"value": "API ORG"
						},
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						},
						{
							"key": "desc",
							"value": "This Is for Trello APIs Tests Project WS"
						},
						{
							"key": "ID",
							"value": "{{OrgID}}",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Me Data Test",
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "",
							"type": "string"
						},
						{
							"key": "key",
							"value": "",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{BaseURL}}/1/members/toqaadel3",
					"host": [
						"{{BaseURL}}"
					],
					"path": [
						"1",
						"members",
						"toqaadel3"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Organizations for a member",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Number of Organizations is 3 \", function () {\r",
							"    pm.expect(jsonData.length).to.eql(3);\r",
							"});\r",
							"\r",
							"pm.test(\"Organizations\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].displayName).to.eql(\"API ORG\");\r",
							"    pm.expect(jsonData[1].displayName).to.eql(\"Trello Workspace\");\r",
							"    pm.expect(jsonData[2].displayName).to.eql(\"test\");\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{BaseURL}}/1/members/me/organizations?fields=all&fillters=all&paid_account=false&key={{key}}&token={{token}}",
					"host": [
						"{{BaseURL}}"
					],
					"path": [
						"1",
						"members",
						"me",
						"organizations"
					],
					"query": [
						{
							"key": "fields",
							"value": "all"
						},
						{
							"key": "fillters",
							"value": "all"
						},
						{
							"key": "paid_account",
							"value": "false"
						},
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a board inside an organization",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Check Board ID\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"id\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check Board Name\", function () {\r",
							"    pm.expect(pm.response.json().name).to.equal(\"Requests\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Check Organization ID\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"idOrganization\");\r",
							"});\r",
							"\r",
							"pm.test(\"The closed parameter should be false\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.closed).to.eql(false);\r",
							"});\r",
							"\r",
							"pm.environment.set(\"BoardID\", pm.response.json().id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{BaseURL}}/1/boards/?name=Requests&idOrganization={{OrgID}}&key={{key}}&token={{token}}",
					"host": [
						"{{BaseURL}}"
					],
					"path": [
						"1",
						"boards",
						""
					],
					"query": [
						{
							"key": "name",
							"value": "Requests"
						},
						{
							"key": "defaultLabels",
							"value": "true",
							"disabled": true
						},
						{
							"key": "defaultLists",
							"value": "true",
							"disabled": true
						},
						{
							"key": "desc",
							"value": "this board contains api needed requsts",
							"disabled": true
						},
						{
							"key": "idOrganization",
							"value": "{{OrgID}}"
						},
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get boards in an organization",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//const $ = cheerio.load(responseBody);\r",
							"\r",
							"//console.log($('title').text());\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"pm.test(\"Number of Boards should be 1 \", function () {\r",
							"    pm.expect(jsonData.length).to.eql(1);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Boards Name\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].name).to.eql(\"Requests\");\r",
							"    \r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "content-type",
						"value": "application/json; charset=utf-8",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{BaseURL}}/1/organizations/{{OrgID}}/boards?key={{key}}&token={{token}}",
					"host": [
						"{{BaseURL}}"
					],
					"path": [
						"1",
						"organizations",
						"{{OrgID}}",
						"boards"
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						},
						{
							"key": "",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a new list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Check List ID\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"id\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check List Name\", function () {\r",
							"    pm.expect(pm.response.json().name).to.equal(\"GET Requests\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Check Board ID\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"idBoard\");\r",
							"});\r",
							"\r",
							"pm.test(\"The closed parameter should be false\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.closed).to.eql(false);\r",
							"});\r",
							"\r",
							"pm.environment.set(\"ListID\", pm.response.json().id);\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{BaseURL}}/1/lists?name=GET Requests&idBoard={{BoardID}}&key={{key}}&token={{token}}",
					"host": [
						"{{BaseURL}}"
					],
					"path": [
						"1",
						"lists"
					],
					"query": [
						{
							"key": "name",
							"value": "GET Requests"
						},
						{
							"key": "idBoard",
							"value": "{{BoardID}}"
						},
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all lists on a board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"pm.test(\"Number of Lists is 4 \", function () {\r",
							"    pm.expect(jsonData.length).to.eql(4);\r",
							"});\r",
							"\r",
							"pm.test(\"Organizations Names\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].name).to.eql(\"GET Requests\");\r",
							"    pm.expect(jsonData[1].name).to.eql(\"To Do\");\r",
							"    pm.expect(jsonData[2].name).to.eql(\"Doing\");\r",
							"    pm.expect(jsonData[3].name).to.eql(\"Done\");\r",
							"    \r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{BaseURL}}/1/boards/{{BoardID}}/lists?key={{key}}&token={{token}}",
					"host": [
						"{{BaseURL}}"
					],
					"path": [
						"1",
						"boards",
						"{{BoardID}}",
						"lists"
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Archive a list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"The closed parameter should be false\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.closed).to.eql(true);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{BaseURL}}/1/lists/{{ListID}}/closed?key={{key}}&token={{token}}&value=true",
					"host": [
						"{{BaseURL}}"
					],
					"path": [
						"1",
						"lists",
						"{{ListID}}",
						"closed"
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						},
						{
							"key": "value",
							"value": "true"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete a board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Board is deleted successfully\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData._value).to.eql(null);\r",
							"    pm.response\r",
							"});\r",
							"\r",
							"\r",
							"/*\r",
							"pm.test(\"The closed parameter should be false\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.closed).to.eql(true);\r",
							"});\r",
							"*/"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json; charset=utf-8",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{BaseURL}}/1/boards/{{BoardID}}?key={{key}}&token={{token}}",
					"host": [
						"{{BaseURL}}"
					],
					"path": [
						"1",
						"boards",
						"{{BoardID}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete an organization",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json; charset=utf-8",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{BaseURL}}/1/organizations/{{OrgID}}?key={{key}}&token={{token}}",
					"host": [
						"{{BaseURL}}"
					],
					"path": [
						"1",
						"organizations",
						"{{OrgID}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "ATTA373fc8f1d8b7688343fdc236c5b7b0eb9fa23ffbea1efde7b4ae08d386d1cd0598212C1F",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}